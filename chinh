-- Ch·ªëng AFK kick
local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:Connect(function()
	vu:Button2Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
	wait(1)
	vu:Button2Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
end)

-- Services
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

-- ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "Doraemon"
ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Th√¥ng b√°o g√≥c d∆∞·ªõi ph·∫£i
local BottomRightNotif = Instance.new("TextLabel")
BottomRightNotif.Name = "BottomRightNotif"
BottomRightNotif.Parent = ScreenGui
BottomRightNotif.AnchorPoint = Vector2.new(1, 1)
BottomRightNotif.Position = UDim2.new(1, 300, 1, -20)
BottomRightNotif.Size = UDim2.new(0, 280, 0, 30)
BottomRightNotif.BackgroundTransparency = 0.2
BottomRightNotif.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
BottomRightNotif.TextColor3 = Color3.fromRGB(255, 255, 255)
BottomRightNotif.Font = Enum.Font.GothamBold
BottomRightNotif.TextSize = 14
BottomRightNotif.Visible = false
BottomRightNotif.TextXAlignment = Enum.TextXAlignment.Center
BottomRightNotif.ZIndex = 9999

local bottomNotifCorner = Instance.new("UICorner", BottomRightNotif)
bottomNotifCorner.CornerRadius = UDim.new(0, 6)

local function showBottomRight(text)
	BottomRightNotif.Text = text
	BottomRightNotif.Visible = true
	BottomRightNotif.Position = UDim2.new(1, 300, 1, -20) -- b·∫Øt ƒë·∫ßu ngo√†i m√†n h√¨nh
	BottomRightNotif.TextTransparency = 1
	BottomRightNotif.BackgroundTransparency = 1

	local tweenIn = TweenService:Create(BottomRightNotif, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
		TextTransparency = 0,
		BackgroundTransparency = 0.2,
		Position = UDim2.new(1, -20, 1, -20) -- tr∆∞·ª£t v√†o m√†n h√¨nh
	})
	tweenIn:Play()

	delay(5, function()
		local tweenOut = TweenService:Create(BottomRightNotif, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
			TextTransparency = 1,
			BackgroundTransparency = 1,
			Position = UDim2.new(1, 300, 1, -20) -- tr∆∞·ª£t ra l·∫°i
		})
		tweenOut:Play()
		tweenOut.Completed:Wait()
		BottomRightNotif.Visible = false
	end)
end

-- Toggle Button
local ToggleButton = Instance.new("ImageButton")
ToggleButton.Name = "ToggleButton"
ToggleButton.Parent = ScreenGui
ToggleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ToggleButton.BackgroundTransparency = 1
ToggleButton.BorderSizePixel = 0
ToggleButton.Position = UDim2.new(0.05, 0, 0.15, 0)
ToggleButton.Size = UDim2.new(0, 70, 0, 70)
ToggleButton.Image = "rbxthumb://type=Asset&id=124835422265873&w=150&h=150"
ToggleButton.Draggable = true
ToggleButton.Active = true

local UICornerButton = Instance.new("UICorner")
UICornerButton.CornerRadius = UDim.new(1, 0)
UICornerButton.Parent = ToggleButton 

-- Quay 360 ƒë·ªô li√™n t·ª•c trong 8 gi√¢y
task.spawn(function()
    while true do
        local tween = TweenService:Create(
            ToggleButton,
            TweenInfo.new(8, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut),
            {Rotation = ToggleButton.Rotation + 360}
        )
        tween:Play()
        tween.Completed:Wait()
    end
end)

-- Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainMenu"
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.BorderSizePixel = 0
MainFrame.BackgroundTransparency = 0.8
MainFrame.Position = UDim2.new(0.2, 0, 0.2, 0)
MainFrame.Size = UDim2.new(0, 500, 0, 320)
MainFrame.Visible = true
MainFrame.ClipsDescendants = true

local UICornerMain = Instance.new("UICorner")
UICornerMain.CornerRadius = UDim.new(0, 12)
UICornerMain.Parent = MainFrame

-- Container b√™n d∆∞·ªõi TitleBar
local ContentFrame = Instance.new("Frame")
ContentFrame.Name = "ContentFrame"
ContentFrame.Parent = MainFrame
ContentFrame.Position = UDim2.new(0, 0, 0, 30) -- d∆∞·ªõi TitleBar
ContentFrame.Size = UDim2.new(1, 0, 1, -30)
ContentFrame.BackgroundTransparency = 1
ContentFrame.BorderSizePixel = 0

-- B√™n tr√°i chi·∫øm 2/5 (40%)
local LeftPane = Instance.new("ScrollingFrame")
LeftPane.CanvasSize = UDim2.new(0, 0, 0, 0)
LeftPane.ScrollBarThickness = 4
LeftPane.AutomaticCanvasSize = Enum.AutomaticSize.Y
LeftPane.VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar
LeftPane.ScrollingDirection = Enum.ScrollingDirection.Y
LeftPane.Name = "LeftPane"
LeftPane.Parent = ContentFrame
LeftPane.Size = UDim2.new(0.3, 0, 1, 0) -- chi·∫øm 30% chi·ªÅu ngang
LeftPane.Position = UDim2.new(0, 0, 0, 0)
LeftPane.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
LeftPane.BorderSizePixel = 0
LeftPane.BackgroundTransparency = 0.8

local mainListLayout = Instance.new("UIListLayout")
mainListLayout.Parent = LeftPane
mainListLayout.SortOrder = Enum.SortOrder.LayoutOrder
mainListLayout.Padding = UDim.new(0, 6) -- Kho·∫£ng c√°ch gi·ªØa c√°c n√∫t Main

local padding = Instance.new("UIPadding")
padding.PaddingTop = UDim.new(0, 10) -- D·ªãch xu·ªëng 10 pixels (ho·∫∑c ch·ªânh t√πy √Ω)
padding.Parent = LeftPane

-- B√™n ph·∫£i chi·∫øm 3/5 (60%)
local RightPane = Instance.new("Frame")
RightPane.Name = "RightPane"
RightPane.Parent = ContentFrame
RightPane.Size = UDim2.new(0.7, 0, 1, 0) -- chi·∫øm 70% c√≤n l·∫°i
RightPane.Position = UDim2.new(0.3, 0, 0, 0) -- b·∫Øt ƒë·∫ßu sau LeftPane
RightPane.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
RightPane.BorderSizePixel = 0
RightPane.BackgroundTransparency = 0.8

-- Bo tr√≤n ContentFrame
local UICorner_Content = Instance.new("UICorner")
UICorner_Content.CornerRadius = UDim.new(0, 8)
UICorner_Content.Parent = ContentFrame

-- Bo tr√≤n LeftPane
local UICorner_Left = Instance.new("UICorner")
UICorner_Left.CornerRadius = UDim.new(0, 8)
UICorner_Left.Parent = LeftPane

-- Bo tr√≤n RightPane
local UICorner_Right = Instance.new("UICorner")
UICorner_Right.CornerRadius = UDim.new(0, 8)
UICorner_Right.Parent = RightPane

-- Title Bar
local TitleBar = Instance.new("Frame")
TitleBar.Name = "TitleBar"
TitleBar.Size = UDim2.new(1, 0, 0, 40)
TitleBar.Position = UDim2.new(0, 0, 0, 0)
TitleBar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
TitleBar.BackgroundTransparency = 0.3
TitleBar.BorderSizePixel = 0
TitleBar.Parent = MainFrame
TitleBar.Active = true

-- Bo tr√≤n g√≥c tr√™n cho TitleBar
local UICornerTitle = Instance.new("UICorner")
UICornerTitle.CornerRadius = UDim.new(0, 12)
UICornerTitle.Parent = TitleBar

-- Bo tr√≤n ri√™ng g√≥c tr√™n (n·∫øu studio h·ªó tr·ª£ ph·∫ßn g√≥c ri√™ng bi·ªát)
pcall(function()
	UICornerTitle.TopLeft = true
	UICornerTitle.TopRight = true
	UICornerTitle.BottomLeft = false
	UICornerTitle.BottomRight = false
end)

-- Container cho title v√† subtitle
local TitleContainer = Instance.new("Frame")
TitleContainer.Name = "TitleContainer"
TitleContainer.Parent = TitleBar
TitleContainer.BackgroundTransparency = 1
TitleContainer.Position = UDim2.new(0, 10, 0, 0) -- c√°ch l·ªÅ tr√°i m·ªôt ch√∫t
TitleContainer.Size = UDim2.new(0, 200, 1, 0)

-- Ti√™u ƒë·ªÅ (Title)
local TitleText = Instance.new("TextLabel")
TitleText.Name = "TitleText"
TitleText.Parent = TitleContainer
TitleText.BackgroundTransparency = 1
TitleText.Size = UDim2.new(1, 0, 0.5, 0)
TitleText.Position = UDim2.new(0, 0, 0, 0)
TitleText.Text = "Machines D Hub"
TitleText.Font = Enum.Font.GothamBold
TitleText.TextSize = 16
TitleText.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleText.TextXAlignment = Enum.TextXAlignment.Left

-- Ph·ª• ƒë·ªÅ (Subtitle)
local SubtitleText = Instance.new("TextLabel")
SubtitleText.Name = "SubtitleText"
SubtitleText.Parent = TitleContainer
SubtitleText.BackgroundTransparency = 1
SubtitleText.Size = UDim2.new(1, 0, 0.5, 0)
SubtitleText.Position = UDim2.new(0, 0, 0.5, 0)
SubtitleText.Text = "By Dles"
SubtitleText.Font = Enum.Font.Gotham
SubtitleText.TextSize = 13
SubtitleText.TextColor3 = Color3.fromRGB(180, 180, 180)
SubtitleText.TextXAlignment = Enum.TextXAlignment.Left

-- N√∫t Close (X)
local CloseButton = Instance.new("ImageButton")
CloseButton.Name = "CloseButton"
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Position = UDim2.new(1, -30, 0, 0)
CloseButton.BackgroundTransparency = 1 -- N·ªÅn trong su·ªët
CloseButton.BorderSizePixel = 0
CloseButton.AutoButtonColor = false
CloseButton.Parent = TitleBar

local CloseLabel = Instance.new("TextLabel")
CloseLabel.Text = "üí•"
CloseLabel.Font = Enum.Font.GothamBold
CloseLabel.TextSize = 14
CloseLabel.Size = UDim2.new(1, 0, 1, 0)
CloseLabel.BackgroundTransparency = 1
CloseLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
CloseLabel.TextStrokeTransparency = 1
CloseLabel.Parent = CloseButton

-- N√∫t Minimize (-)
local MinimizeButton = Instance.new("ImageButton")
MinimizeButton.Name = "MinimizeButton"
MinimizeButton.Size = UDim2.new(0, 30, 0, 30)
MinimizeButton.Position = UDim2.new(1, -60, 0, 0)
MinimizeButton.BackgroundTransparency = 1 -- N·ªÅn trong su·ªët
MinimizeButton.BorderSizePixel = 0
MinimizeButton.AutoButtonColor = false
MinimizeButton.Parent = TitleBar

local MinimizeLabel = Instance.new("TextLabel")
MinimizeLabel.Text = "üåÄ"
MinimizeLabel.Font = Enum.Font.GothamBold
MinimizeLabel.TextSize = 14
MinimizeLabel.Size = UDim2.new(1, 0, 1, 0)
MinimizeLabel.BackgroundTransparency = 1
MinimizeLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
MinimizeLabel.TextStrokeTransparency = 1
MinimizeLabel.Parent = MinimizeButton

-- Hover effect
local function styleTitleButton(btn)
	btn.AutoButtonColor = false
	btn.MouseEnter:Connect(function()
		btn.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
	end)
	btn.MouseLeave:Connect(function()
		btn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	end)
end
styleTitleButton(CloseButton)
styleTitleButton(MinimizeButton)

-- Tween settings
local openTweenInfo = TweenInfo.new(0.25, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
local closeTweenInfo = TweenInfo.new(0.25, Enum.EasingStyle.Sine, Enum.EasingDirection.In)

-- Bi·∫øn l∆∞u l·∫°i k√≠ch c·ª° cu·ªëi c√πng do ng∆∞·ªùi d√πng ƒëi·ªÅu ch·ªânh
local lastSize = MainFrame.Size

local function tweenVisible(frame, show)
	if show then
		frame.Visible = true
		frame.BackgroundTransparency = 1
		frame.Size = UDim2.new(0, 0, 0, 0)
		TweenService:Create(frame, TweenInfo.new(0.25, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {
			BackgroundTransparency = 0.8,
			Size = lastSize -- d√πng l·∫°i k√≠ch th∆∞·ªõc cu·ªëi c√πng
		}):Play()
	else
		lastSize = frame.Size -- l∆∞u l·∫°i k√≠ch th∆∞·ªõc hi·ªán t·∫°i
		local closeTween = TweenService:Create(frame, TweenInfo.new(0.25, Enum.EasingStyle.Sine, Enum.EasingDirection.In), {
			BackgroundTransparency = 1,
			Size = UDim2.new(0, 0, 0, 0)
		})
		closeTween:Play()
		closeTween.Completed:Connect(function()
			frame.Visible = false
		end)
	end
end

-- Toggle
local draggingToggle = false
local dragStartToggle, startPosToggle
local movedToggle = false -- ƒë·ªÉ ph√¢n bi·ªát click v·ªõi k√©o

ToggleButton.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		draggingToggle = true
		dragStartToggle = input.Position
		startPosToggle = ToggleButton.Position
		movedToggle = false
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if draggingToggle and input.UserInputType == Enum.UserInputType.MouseMovement then
		local delta = input.Position - dragStartToggle

		-- N·∫øu k√©o xa h∆°n 3px th√¨ ƒë√°nh d·∫•u l√† "ƒëang k√©o"
		if math.abs(delta.X) > 3 or math.abs(delta.Y) > 3 then
			movedToggle = true
		end

		ToggleButton.Position = UDim2.new(
			startPosToggle.X.Scale,
			startPosToggle.X.Offset + delta.X,
			startPosToggle.Y.Scale,
			startPosToggle.Y.Offset + delta.Y
		)
	end
end)

UserInputService.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 and draggingToggle then
		draggingToggle = false

		-- N·∫øu nh·∫£ chu·ªôt m√† kh√¥ng k√©o ‚Üí coi l√† click toggle
		if not movedToggle then
			tweenVisible(MainFrame, not MainFrame.Visible)
		end
	end
end)

-- Minimize
MinimizeButton.MouseButton1Click:Connect(function()
	tweenVisible(MainFrame, false)
end)

-- Close
CloseButton.MouseButton1Click:Connect(function()
	tweenVisible(MainFrame, false)
	ToggleButton.Visible = false
	showBottomRight("üëã H·∫πn g·∫∑p l·∫°i")
end)

-- Drag
local dragging = false
local dragStart, startPos

TitleBar.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = MainFrame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then dragging = false end
		end)
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
		local delta = input.Position - dragStart
		MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)

-- Resize handle
local ResizeHandle = Instance.new("Frame")
ResizeHandle.Name = "ResizeHandle"
ResizeHandle.Size = UDim2.new(0, 50, 0, 50)
ResizeHandle.Position = UDim2.new(1, -20, 1, -20)
ResizeHandle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
ResizeHandle.BorderSizePixel = 0
ResizeHandle.Parent = MainFrame
ResizeHandle.BackgroundTransparency = 1
ResizeHandle.Active = true

local ResizeCorner = Instance.new("UICorner", ResizeHandle)
ResizeCorner.CornerRadius = UDim.new(0, 4)

MainFrame:GetPropertyChangedSignal("Size"):Connect(function()
	ResizeHandle.Position = UDim2.new(1, -20, 1, -20)
end)

-- Resize logic
local resizing = false
local resizeStartPos, resizeStartSize

ResizeHandle.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		resizing = true
		resizeStartPos = input.Position
		resizeStartSize = MainFrame.Size
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then resizing = false end
		end)
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if resizing and input.UserInputType == Enum.UserInputType.MouseMovement then
		local delta = input.Position - resizeStartPos
		local newWidth = math.max(300, resizeStartSize.X.Offset + delta.X)
		local newHeight = math.max(200, resizeStartSize.Y.Offset + delta.Y)
		MainFrame.Size = UDim2.new(0, newWidth, 0, newHeight)
	end
end)

-- // TAB & MAIN H·ªÜ TH·ªêNG ƒê·ªòNG //
local TabContainers = {} -- ch·ª©a danh s√°ch c√°c container tab cho m·ªói main
local CurrentMain = nil

-- H√†m t·∫°o tab trong RightPane ·ª©ng v·ªõi main c·ª• th·ªÉ
function createTabForCurrentMain(tabName, hasToggle, callback)
	local container = TabContainers[CurrentMain]

	local tab = Instance.new("TextButton")
	tab.Size = UDim2.new(1, -20, 0, 30)
	tab.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	tab.BorderSizePixel = 0
        tab.BackgroundTransparency = 0.6
	tab.AutoButtonColor = false
	tab.Text = ""
	tab.Parent = container
	tab.LayoutOrder = #container:GetChildren()

	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(1, -40, 1, 0)
	label.Position = UDim2.new(0, 0, 0, 0)
	label.BackgroundTransparency = 1
	label.TextColor3 = Color3.new(1, 1, 1)
	label.Font = Enum.Font.Gotham
	label.TextSize = 14
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Text = tabName
	label.Parent = tab

	local padding = Instance.new("UIPadding")
	padding.PaddingLeft = UDim.new(0, 10)
	padding.Parent = label

	-- N·∫øu c√≥ toggle
	if hasToggle then
		local toggle = Instance.new("Frame")
		toggle.Size = UDim2.new(0, 40, 0, 20)
		toggle.Position = UDim2.new(1, -50, 0.5, -10)
		toggle.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
		toggle.BorderSizePixel = 0
		toggle.Parent = tab

		local corner = Instance.new("UICorner", toggle)
		corner.CornerRadius = UDim.new(1, 0)

		local knob = Instance.new("Frame")
		knob.Size = UDim2.new(0, 18, 0, 18)
		knob.Position = UDim2.new(0, 1, 0, 1)
		knob.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		knob.BorderSizePixel = 0
		knob.Parent = toggle

		local knobCorner = Instance.new("UICorner", knob)
		knobCorner.CornerRadius = UDim.new(1, 0)

		local toggled = false
		local TweenService = game:GetService("TweenService")

		toggle.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				toggled = not toggled

				local goal = {}
				goal.Position = toggled and UDim2.new(1, -19, 0, 1) or UDim2.new(0, 1, 0, 1)
				TweenService:Create(knob, TweenInfo.new(0.2), goal):Play()

				toggle.BackgroundColor3 = toggled and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(70, 70, 70)

				if callback then
					pcall(function()
						callback(toggled)
					end)
				end
			end
		end)
	end

	tab.MouseButton1Click:Connect(function()
		print("Tab clicked:", tabName)
	end)
end

-- H√†m t·∫°o Main button v√† container tab t∆∞∆°ng ·ª©ng
local function createMainButton(name)
	local button = Instance.new("TextButton")
	button.Size = UDim2.new(1, -10, 0, 35)
	button.Position = UDim2.new(0, 5, 0, (#LeftPane:GetChildren() - 1) * 40 + 5)
	button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	button.Text = name
	button.Font = Enum.Font.Gotham
	button.TextColor3 = Color3.fromRGB(200, 200, 200) -- m√†u b√¨nh th∆∞·ªùng
	button.TextSize = 14
	button.BorderSizePixel = 0
	button.Parent = LeftPane
	button.BackgroundTransparency = 1

	-- T·∫°o stroke cho n√∫t nh∆∞ng ·∫©n ƒëi tr∆∞·ªõc
	local stroke = Instance.new("UIStroke")
	stroke.Color = Color3.fromRGB(255, 255, 255)
	stroke.Thickness = 1
	stroke.Transparency = 1 -- ·∫©n
	stroke.Parent = button

	-- T·∫°o container tab
	local tabContainer = Instance.new("Frame")
	tabContainer.Position = UDim2.new(0, 0, 0, 10)
	tabContainer.Size = UDim2.new(1, 0, 1, -10)
	tabContainer.BackgroundTransparency = 1
	tabContainer.Visible = false
	tabContainer.Parent = RightPane
	TabContainers[name] = tabContainer

	local layout = Instance.new("UIListLayout")
	layout.Padding = UDim.new(0, 8)
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Parent = tabContainer

	-- Khi click v√†o Main
	button.MouseButton1Click:Connect(function()
		-- Hi·ªán tab ƒë√∫ng
		for key, container in pairs(TabContainers) do
			container.Visible = (key == name)
		end

		-- L√†m n·ªïi n√∫t ƒë∆∞·ª£c ch·ªçn
		for _, btn in ipairs(LeftPane:GetChildren()) do
			if btn:IsA("TextButton") then
				btn.TextColor3 = Color3.fromRGB(200, 200, 200)
				local s = btn:FindFirstChildOfClass("UIStroke")
				if s then s.Transparency = 1 end
			end
		end

		button.TextColor3 = Color3.fromRGB(255, 255, 160) -- m√†u s√°ng v√†ng
		stroke.Transparency = 0 -- hi·ªán stroke

		CurrentMain = name
	end)
end
